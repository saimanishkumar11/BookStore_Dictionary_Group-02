{
	"info": {
		"_postman_id": "d76a51b5-0cd3-4e8c-a7e3-620ed47db4db",
		"name": "Account",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "21165003"
	},
	"item": [
		{
			"name": "Authorized",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"the bench mark for response time is 1000ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
							"});\r",
							"\r",
							"pm.test(\"the response body is true\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.eql(true);\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.environment.set(\"resource_path\", \"Account/v1/Authorized\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "!King@123",
							"type": "string"
						},
						{
							"key": "key",
							"value": "King",
							"type": "string"
						},
						{
							"key": "in",
							"value": "header",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"userName\": \"{{userName}}\",\r\n  \"password\": \"{{password}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}{{resource_path}}",
					"host": [
						"{{url}}{{resource_path}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "GenerateToken",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"the bench mark for response time is 1000ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
							"});\r",
							"\r",
							"pm.test(\"Verify status message\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.status).to.eql(\"Success\");\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.environment.set(\"resource_path1\", \"Account/v1/GenerateToken\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"userName\": \"{{userName}}\",\r\n  \"password\": \"{{password}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}{{reource_path1}}",
					"host": [
						"{{url}}{{reource_path1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "PostUser",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"the bench mark for response time is 1000ms \", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
							"});\r",
							"\r",
							"pm.test(\"Added new user\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    uid=jsonData.userID;\r",
							"});\r",
							"\r",
							"pm.test(\" verify confirmation message contains user Id \", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"   user_id =jsonData.userID;\r",
							"  \r",
							"});\r",
							"\r",
							"pm.test(\" verify confirmation message contains username \", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"   user_name =jsonData.username;\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.environment.set(\"reource_path2\", \"Account/v1/User\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"userName\": \"{{userName}}\",\r\n  \"password\": \"{{password}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}{{resource_path2}}",
					"host": [
						"{{url}}{{resource_path2}}"
					]
				}
			},
			"response": [
				{
					"name": "PostUser",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"userName\": \"KrishnaMurthy\",\r\n  \"password\": \"Sairam@1998\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}Account/v1/User",
							"host": [
								"{{url}}Account"
							],
							"path": [
								"v1",
								"User"
							]
						}
					},
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": null
				}
			]
		},
		{
			"name": "UserDetails",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"the bench mark for response time is 1000ms \", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
							"});\r",
							"\r",
							"pm.test(\"User Id is\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    uid=jsonData.userID;\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.environment.set(\"reource_path3\", \"Account/v1/User/\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "Sairam@1998",
							"type": "string"
						},
						{
							"key": "username",
							"value": "KrishnaMurthy",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}{{resource_path3}}b5d21111-1b5f-4644-b32c-717a98a185cf",
					"host": [
						"{{url}}{{resource_path3}}b5d21111-1b5f-4644-b32c-717a98a185cf"
					]
				}
			},
			"response": []
		},
		{
			"name": "DeleteUser",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"the bench mark for response time is 1000ms \", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.environment.set(\"resource_path4\", \"Account/v1/User/\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "Sairam@1998",
							"type": "string"
						},
						{
							"key": "username",
							"value": "KrishnaMurthy",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"userName\": \"{{userName}}\",\r\n  \"password\": \"{{password}}\"\r\n}",
					"options": {
						"raw": {
							"language": "text"
						}
					}
				},
				"url": {
					"raw": "{{url}}{{resource_path4}}b5d21111-1b5f-4644-b32c-717a98a185cf",
					"host": [
						"{{url}}{{resource_path4}}b5d21111-1b5f-4644-b32c-717a98a185cf"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"pm.globals.set(\"url\", \"https://bookstore.toolsqa.com/\");"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"pm.test(\"Status code is 200\", function () {",
					"    pm.expect(pm.response.code).to.be.oneOf([200,201,400,401,406])",
					"});"
				]
			}
		}
	]
}